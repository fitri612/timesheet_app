// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  worklogs  Worklog[]
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")

  @@map("users")
}

model Project {
  id        Int       @id @default(autoincrement())
  name      String
  location  String    // For Batu, Malang, etc.
  worklogs  Worklog[]
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")

  @@map("projects")
}

model Worklog {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [userId], references: [id])
  userId      Int      @map("user_id")
  project     Project  @relation(fields: [projectId], references: [id])
  projectId   Int      @map("project_id")
  workDate    DateTime @map("work_date")
  hoursWorked Float    @map("hours_worked") // Using Float for decimal hours (e.g., 4.5 hours)
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@index([userId, workDate]) // Index for faster queries on user's daily work
  @@index([projectId])
  @@map("worklogs")
}
